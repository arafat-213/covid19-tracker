{"version":3,"sources":["api/covidData.js","hooks/useCases.js","components/Dashboard/DashboardCard.js","components/Dashboard/Dashboard.js","hooks/useStateCases.js","hooks/useDistrictCases.js","components/Tables/DistrictTable/DistrictTable.js","components/Tables/StateTable/StateTable.js","components/App.js","index.js"],"names":["axios","create","baseURL","useCases","useState","cases","setCases","updateTimeStamp","setUpdateTimeStamp","fetchData","a","covidData","get","response","currentCases","data","statewise","lastupdatedtime","useEffect","console","log","DashboardCard","props","className","count","dailyCount","card","Dashboard","confirmed","deaths","recovered","deltaconfirmed","deltadeaths","deltarecovered","style","marginTop","useStateCases","stateCases","setStateCases","_","remove","obj","state","JSON","stringify","jsondata","parse","k","v","isNaN","parseInt","parsedData","useDistrictCases","districtCases","setDistrictCases","DistrictTable","tableData","filter","districtData","columns","dataField","text","sort","isDummy","formatter","cell","row","color","time","wrapperClasses","keyField","hover","bootstrap4","condensed","defaultSort","order","expandRow","renderer","rowIndex","showExpandColumn","StateTable","striped","defaultSorted","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.5241fdca.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst URL = `https://api.covid19india.org/data.json`\n\nexport default axios.create({\n\tbaseURL: URL\n})\n","import { useState, useEffect } from 'react'\nimport covidData from '../api/covidData'\n\nconst useCases = () => {\n\tconst [cases, setCases] = useState([])\n\tconst [updateTimeStamp, setUpdateTimeStamp] = useState('')\n\n\tconst fetchData = async () => {\n\t\tconst response = await covidData.get()\n\t\tconst currentCases = response.data.statewise[0]\n\n\t\tconst updateTimeStamp = response.data.statewise[0].lastupdatedtime\n\n\t\tsetCases(currentCases)\n\t\tsetUpdateTimeStamp(updateTimeStamp)\n\t}\n\n\tuseEffect(() => {\n\t\tfetchData()\n\t}, [])\n\tconsole.log(cases)\n\tconsole.log('time stamp', updateTimeStamp)\n\n\treturn { cases, updateTimeStamp }\n}\n\nexport default useCases\n","import React from 'react'\nimport './DashboardCard.css'\nconst renderDailyCount = dailyCount => {\n\tif (dailyCount)\n\t\treturn <small className=\"ext-center\">{`[+${dailyCount}]`}</small>\n\treturn null\n}\nconst DashboardCard = props => {\n\treturn (\n\t\t<div className=\"text-center\">\n\t\t\t<div className=\"card-body\">\n\t\t\t\t<div className=\"card-title\">\n\t\t\t\t\t<h2 className=\"text-center\">{props.count + ''}</h2>\n\t\t\t\t</div>\n\t\t\t\t<p className=\"card-text text-center h4\">\n\t\t\t\t\t{renderDailyCount(props.dailyCount)}\n\t\t\t\t\t<br />\n\t\t\t\t</p>\n\t\t\t\t<div className=\"card-text text-nowrap text-center\">\n\t\t\t\t\t<p className=\"h5\">Total {props.card}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default DashboardCard\n","import React from 'react'\nimport useCases from '../../hooks/useCases'\nimport DashboardCard from '../Dashboard/DashboardCard'\nimport './DashboardCard.css'\n\nconst Dashboard = () => {\n\tconst {\n\t\tcases: {\n\t\t\tconfirmed,\n\t\t\tdeaths,\n\t\t\trecovered,\n\t\t\tdeltaconfirmed,\n\t\t\tdeltadeaths,\n\t\t\tdeltarecovered\n\t\t},\n\t\tupdateTimeStamp\n\t} = useCases()\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-sm-3\">\n\t\t\t\t\t<div className=\"card card-confirmed\">\n\t\t\t\t\t\t<DashboardCard\n\t\t\t\t\t\t\tclassName=\"four wide colum\"\n\t\t\t\t\t\t\tcard=\"confirmed\"\n\t\t\t\t\t\t\tcount={confirmed}\n\t\t\t\t\t\t\tdailyCount={deltaconfirmed}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"col-sm-3\">\n\t\t\t\t\t<div className=\"card card-recovered\">\n\t\t\t\t\t\t<DashboardCard\n\t\t\t\t\t\t\tclassName=\"four wide colum\"\n\t\t\t\t\t\t\tcard=\"recovered\"\n\t\t\t\t\t\t\tcount={recovered}\n\t\t\t\t\t\t\tdailyCount={deltarecovered}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-sm-3\">\n\t\t\t\t\t<div className=\"card card-active\">\n\t\t\t\t\t\t<DashboardCard\n\t\t\t\t\t\t\tclassName=\"four wide colum\"\n\t\t\t\t\t\t\tcard=\"active\"\n\t\t\t\t\t\t\tcount={confirmed - deaths - recovered}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-sm-3 \">\n\t\t\t\t\t<div className=\"card card-deceased\">\n\t\t\t\t\t\t<DashboardCard\n\t\t\t\t\t\t\tclassName=\"four wide colum card-deceased\"\n\t\t\t\t\t\t\tcard=\"deceased\"\n\t\t\t\t\t\t\tcount={deaths}\n\t\t\t\t\t\t\tdailyCount={deltadeaths}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<h6\n\t\t\t\tstyle={{ marginTop: '8px' }}\n\t\t\t\tclassName=\"float-right\">{`*Last updated at ${updateTimeStamp}`}</h6>\n\t\t</div>\n\t)\n}\n\nexport default Dashboard\n","import { useState, useEffect } from 'react'\nimport covidData from '../api/covidData'\nimport _ from 'lodash'\n\nconst useStateCases = () => {\n\tconst [stateCases, setStateCases] = useState([])\n\tconst fetchData = async () => {\n\t\tconst response = await covidData.get()\n\n\t\tconst { statewise } = response.data\n\n\t\t_.remove(statewise, obj => obj.state === 'Total')\n\t\tconsole.log('state wise', response.data)\n\n\t\t// Axios parses data not in a way this app needs\n\t\t// Please don't touch it.\n\t\t// It's stupid, but it works.\n\t\tconst jsondata = await JSON.stringify(statewise)\n\t\tconst parsedData = await JSON.parse(jsondata, (k, v) => {\n\t\t\treturn typeof v === 'object' || isNaN(v) ? v : parseInt(v, 10)\n\t\t})\n\t\tsetStateCases(parsedData)\n\t}\n\n\tuseEffect(() => {\n\t\tfetchData()\n\t}, [])\n\n\treturn stateCases\n}\n\nexport default useStateCases\n","import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst useDistrictCases = () => {\n\tconst [districtCases, setDistrictCases] = useState([])\n\n\tconst fetchData = async () => {\n\t\tconst response = await axios.get(\n\t\t\t`https://api.covid19india.org/v2/state_district_wise.json`\n\t\t)\n\t\tconst data = response.data\n\t\tconsole.log('District', data)\n\t\tsetDistrictCases(data)\n\t}\n\n\tuseEffect(() => {\n\t\tfetchData()\n\t}, [])\n\treturn districtCases\n}\n\nexport default useDistrictCases\n","import React from 'react'\nimport BootstrapTable from 'react-bootstrap-table-next'\nimport useDistrictCases from '../../../hooks/useDistrictCases'\nimport './DistrictTable.css'\n\nconst DistrictTable = props => {\n\tconst response = useDistrictCases()\n\tlet tableData = []\n\tvar data = response.filter(obj => obj.state === props.state)\n\tif (data[0]) {\n\t\ttableData = data[0].districtData\n\t\tconsole.log('From comp', tableData)\n\t}\n\n\tconst columns = [\n\t\t{\n\t\t\tdataField: 'district',\n\t\t\ttext: 'District',\n\t\t\tsort: true\n\t\t},\n\t\t{\n\t\t\tdataField: 'delta.confirmed',\n\t\t\tisDummy: true,\n\t\t\ttext: '',\n\t\t\tformatter: (cell, row) =>\n\t\t\t\tcell === 0 ? (\n\t\t\t\t\t<span></span>\n\t\t\t\t) : (\n\t\t\t\t\t<span style={{ color: 'grey' }}>{`+${cell}`}</span>\n\t\t\t\t)\n\t\t},\n\t\t{\n\t\t\ttext: 'Confirmed',\n\t\t\tdataField: 'confirmed',\n\t\t\tsort: true\n\t\t},\n\t\t{\n\t\t\ttext: 'Active',\n\t\t\tdataField: 'active',\n\t\t\tsort: true\n\t\t},\n\t\t{\n\t\t\tdataField: 'delta.recovered',\n\t\t\tisDummy: true,\n\t\t\ttext: '',\n\t\t\tformatter: (cell, row) =>\n\t\t\t\tcell === 0 ? (\n\t\t\t\t\t<span></span>\n\t\t\t\t) : (\n\t\t\t\t\t<span style={{ color: 'green' }}>&#8673;{`${cell}`}</span>\n\t\t\t\t)\n\t\t},\n\t\t{\n\t\t\ttext: 'Recovered',\n\t\t\tdataField: 'recovered',\n\t\t\tsort: true\n\t\t},\n\t\t{\n\t\t\tdataField: 'delta.deceased',\n\t\t\tisDummy: true,\n\t\t\ttext: '',\n\t\t\tformatter: (cell, row) =>\n\t\t\t\tcell === 0 ? (\n\t\t\t\t\t<span></span>\n\t\t\t\t) : (\n\t\t\t\t\t<span style={{ color: 'red' }}>{`+${cell}`}</span>\n\t\t\t\t)\n\t\t},\n\t\t{\n\t\t\ttext: 'Deaths',\n\t\t\tdataField: 'deceased',\n\t\t\tsort: true\n\t\t}\n\t]\n\n\treturn (\n\t\t<div>\n\t\t\t<p className=\"text-right\">*Last updated on: {props.time}</p>\n\t\t\t<BootstrapTable\n\t\t\t\twrapperClasses=\"table-responsive\"\n\t\t\t\tkeyField=\"district\"\n\t\t\t\tcolumns={columns}\n\t\t\t\tdata={tableData}\n\t\t\t\thover\n\t\t\t\tbootstrap4\n\t\t\t\tcondensed\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default DistrictTable\n","import React from 'react'\nimport BootstrapTable from 'react-bootstrap-table-next'\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css'\nimport useStateCases from '../../../hooks/useStateCases'\nimport DistrictTable from '../DistrictTable/DistrictTable'\n\nconst columns = [\n\t{\n\t\tdataField: 'state',\n\t\ttext: 'State/UT',\n\t\tsort: true\n\t},\n\t{\n\t\tdataField: 'deltaconfirmed',\n\t\tisDummy: true,\n\t\ttext: '',\n\t\tformatter: (cell, row) =>\n\t\t\tcell === 0 ? (\n\t\t\t\t<span></span>\n\t\t\t) : (\n\t\t\t\t<span style={{ color: '#f6ac15' }}>&#8673;{`${cell}`}</span>\n\t\t\t)\n\t},\n\t{\n\t\tdataField: 'confirmed',\n\t\ttext: 'Confirmed',\n\t\tsort: true\n\t},\n\t{\n\t\tdataField: 'active',\n\t\ttext: 'Active',\n\t\tsort: true\n\t},\n\t{\n\t\tdataField: 'deltarecovered',\n\t\tisDummy: true,\n\t\ttext: '',\n\t\tformatter: (cell, row) =>\n\t\t\tcell === 0 ? (\n\t\t\t\t<span></span>\n\t\t\t) : (\n\t\t\t\t<span style={{ color: 'green' }}>&#8673;{`${cell}`}</span>\n\t\t\t)\n\t},\n\t{\n\t\tdataField: 'recovered',\n\t\ttext: 'Recovered',\n\t\tsort: true\n\t},\n\t{\n\t\tdataField: 'deltadeaths',\n\t\tisDummy: true,\n\t\ttext: '',\n\t\tformatter: (cell, row) =>\n\t\t\tcell === 0 ? (\n\t\t\t\t<span></span>\n\t\t\t) : (\n\t\t\t\t<span style={{ color: 'red' }}>&#8673;{`${cell}`}</span>\n\t\t\t)\n\t},\n\t{\n\t\tdataField: 'deaths',\n\t\ttext: 'Deaths',\n\t\tsort: true\n\t}\n]\n\nconst defaultSort = [\n\t{\n\t\tdataField: 'confirmed',\n\t\torder: 'desc'\n\t}\n]\n\nconst expandRow = {\n\trenderer: (row, rowIndex) => (\n\t\t<div>\n\t\t\t<DistrictTable state={row.state} time={row.lastupdatedtime} />\n\t\t</div>\n\t),\n\tshowExpandColumn: true\n}\n\nconst StateTable = props => {\n\tconst data = useStateCases()\n\tconsole.log('From state', data)\n\n\treturn (\n\t\t<BootstrapTable\n\t\t\twrapperClasses=\"table-responsive\"\n\t\t\tkeyField=\"state\"\n\t\t\tdata={data}\n\t\t\tcolumns={columns}\n\t\t\thover\n\t\t\tbootstrap4\n\t\t\tcondensed\n\t\t\tstriped\n\t\t\tdefaultSorted={defaultSort}\n\t\t\texpandRow={expandRow}\n\t\t/>\n\t)\n}\n\nexport default StateTable\n","import React from 'react'\nimport Dashboard from '../components/Dashboard/Dashboard'\nimport StateTable from './Tables/StateTable/StateTable'\n\nconst App = () => {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<h1 className=\"diplay-3\">Covid19 Tracker</h1>\n\t\t\t<Dashboard />\n\t\t\t<StateTable />\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.querySelector('#root'))\n"],"sourceRoot":""}